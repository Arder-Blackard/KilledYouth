<views:PageViewBase x:TypeArguments="viewModels:ClassificationTunningViewModel"
                    x:Class="HypertensionControlUI.Views.Pages.ClassificationTunningView"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:views="clr-namespace:HypertensionControlUI.Views"
                    xmlns:viewModels="clr-namespace:HypertensionControlUI.ViewModels"
                    xmlns:converters="clr-namespace:HypertensionControlUI.Views.Converters"
                    xmlns:components="clr-namespace:HypertensionControlUI.Sources.Views.Components"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:models="clr-namespace:HypertensionControlUI.Models"
                    mc:Ignorable="d"
                    d:DataContext="{d:DesignInstance Type=viewModels:ClassificationTunningViewModel, IsDesignTimeCreatable=False}"
                    d:DesignHeight="500" d:DesignWidth="500"
                    Title="ClassificationTunning">

    <Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <converters:EqualityConverter x:Key="NotNullEqualityConverter" True="false" False="true" />
                <ObjectDataProvider x:Key="PhysicalActivityProvider"
                                    MethodName="GetValues"
                                    ObjectType="{x:Type system:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="models:PhysicalActivity" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <converters:PhysicalActivityConverter x:Key="PhysicalActivityConverter" />
                <converters:FactorsConverter x:Key="FactorsConverter"/>
                                    
            </Grid.Resources>


            <TextBlock Grid.ColumnSpan="2" Margin="5">Модели, доступные для классификации данного пациента:</TextBlock>
            <ListBox x:Name="ClassificationModelList"
                     Grid.Column="0"
                     Grid.Row="1"
                     ItemsSource="{Binding AvailableClassificationModels}"
                     SelectedItem="{Binding SelectedClassificationModel, Mode=TwoWay}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Name}" TextWrapping="Wrap" Margin="0, 0, 3, 0" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel Grid.Row="1" Grid.Column="1" Margin="3,3,3,3">
                <TextBlock Margin="0, 5, 3, 0" TextWrapping="Wrap" Text="{Binding SelectedClassificationModel.Description}" />
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0, 5, 3, 0" Text="Оптимальный порог отсечения:"/>
                    <TextBlock Margin="0, 5, 3, 0" Text="{Binding SelectedClassificationModel.OptimalCutOff}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0, 5, 3, 0" Text="Прогноз:"/>
                    <TextBlock Margin="0, 5, 3, 0" Text="{Binding Result}" />
                </StackPanel>
            </StackPanel>
            <Button Grid.Row="2" Grid.ColumnSpan="2"
                    Command="{Binding ClassifyPatientCommand}"
                    IsEnabled="{Binding SelectedClassificationModel, 
                Converter={StaticResource NotNullEqualityConverter}, ConverterParameter={x:Null}, Mode=OneWay}">
                Спрогнозировать вероятность болезни
            </Button>
            <components:IllnessProbabilityChart Height="70" Grid.Row="3" Grid.ColumnSpan="2" Margin="4" 
                                                ThumbValue="{Binding Result}" 
                                                CutOffValue="{Binding SelectedClassificationModel.OptimalCutOff}"></components:IllnessProbabilityChart>
            <TextBlock Grid.Row="4" Grid.ColumnSpan="2" Margin="5" TextAlignment="Center">Возможные изменения</TextBlock>
            <ListView Grid.Row="5" Grid.ColumnSpan="2" Width="480" 
                      ItemsSource="{Binding PossibleData}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Фактор" Width="120" DisplayMemberBinding="{Binding Path=Key, Converter={StaticResource FactorsConverter}}" />
                        <GridViewColumn Header="Текущее значение" Width="180" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="viewModels:PossibleData">
                                    <ContentControl Content="{Binding Value1, Mode=OneTime}" HorizontalAlignment="Stretch">
                                        <ContentControl.Resources>
                                            <DataTemplate DataType="{x:Type models:PhysicalActivity}">
                                                <TextBlock Text="{Binding Path=., Converter={StaticResource PhysicalActivityConverter}}" />
                                            </DataTemplate>
                                        </ContentControl.Resources>
                                    </ContentControl>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Новое значение" Width="180">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="viewModels:PossibleData">
                                    <ContentControl Content="{Binding Value2, Mode=TwoWay}" HorizontalAlignment="Stretch">
                                        <ContentControl.Resources>
                                            <DataTemplate DataType="{x:Type system:String}">
                                                <TextBox Text="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Cursor="Hand" HorizontalAlignment="Stretch" Background="Aqua"/>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type system:Double}">
                                                <TextBox Text="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Cursor="Hand" HorizontalAlignment="Stretch"/>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type system:Int32}">
                                                <TextBox Text="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Cursor="Hand" HorizontalAlignment="Stretch"/>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type models:PhysicalActivity}">
                                                <ComboBox  ItemsSource="{Binding Source={StaticResource PhysicalActivityProvider}}"
                                                          SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Content, Mode=TwoWay}">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Path=., Converter={StaticResource PhysicalActivityConverter}}" />
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </DataTemplate>
                                            
                                        </ContentControl.Resources>
                                    </ContentControl>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <Button Grid.Row="6" Grid.ColumnSpan="2"
                    Command="{Binding ClassifyPossiblePatientCommand}"
                    IsEnabled="{Binding SelectedClassificationModel, 
                Converter={StaticResource NotNullEqualityConverter}, ConverterParameter={x:Null}, Mode=OneWay}">
                Спрогнозировать вероятность болезни после коррекции
            </Button>
            <components:IllnessProbabilityChart Height="70" Grid.Row="7" Grid.ColumnSpan="2" Margin="4" 
                                                ThumbValue="{Binding PossibleResult}"
                                                CutOffValue="{Binding SelectedClassificationModel.OptimalCutOff}"></components:IllnessProbabilityChart>



        </Grid>
    </Border>

</views:PageViewBase>